function [id_vect,figs] = main_menu(id_vect,figs,p,ops,cellstat,ftype,atype,img_mode,nplanes,ypix_zplane,zstack,colororder,zstack_drift)
%% DESCRIPTION 
% INPUTS 
% id_vect: vector 1 x neurons
% figs: structure containing figure positions
% p: current plane
% ops: suite2p file with reference image info 
% cellstat: stat(iscell==1) 
% ftype: functional image type 
% atype: anatomical image type 
% img_mode: 'functional' / 'zstack' 
% nplanes: total number of planes in dataset 
% ypix_zplane: estimated location in zstack for each ypix val in each plane
% zstack: X x Y x RGB x Z matrix 
% colororder: 'rgb'/ 'grb' of colors for the zstack 
% zstack_drift: updated mapping estimate between zstack and functional
    % images 

%%
padjusted_xyz = zeros(3,nplanes); % updated to contain user-adjusted mapping between zstack and functional images 


while p ~= -1   % loop function until user exits 
    close all 
    [plane_crshift]=get.crshift(ops,p);
    %-- generate functional image/ control panel 
    [nffigs] = adjustImagev2(p,cellstat,plane_crshift,figs,ops,id_vect,ypix_zplane,'functional',ftype,'anatomical',atype,'type',img_mode); 
    %-- generate zstack image/ control panel 
    [nzfigs,~]= adjustImagev2(p,cellstat,plane_crshift,figs,ops,id_vect,ypix_zplane,'zstack_drift',zstack_drift,'type','zstack','zstack',zstack,'adjusted_xyz',padjusted_xyz(:,p),'colororder',colororder);    
    input_str=prompt.menu_str(1); 
    answer = input (input_str,"s"); 
    
    %--Reclassify Neurons -----------------------------------
    if strcmp(answer,'a')
        cprompt = ['Enter ROIs you wish to change:',char(10)]; 
        [id_vect] = prompt.change_rois(id_vect,cprompt);  
    %--Go to Next Plane -------------------------------------
    elseif strcmp(answer,'s')
        if p+1 <= nplanes
            p= p+1;
        elseif p+1 > nplanes  
            p = 1;   
        end
    %--Go to Previous Plane -----------------------------------
    elseif strcmp(answer,'d')
        if p-1 == 0 
            p = nplanes; 
        elseif p-1 > 0
            p = p-1; 
        end
    %--Change Image Type  --------------------------------------
    elseif strcmp(answer,'r')
        [ftype,atype]=prompt.img_type(atype,ftype); 
    %--Examine Uncertain ---------------------------------------
    elseif strcmp (answer,'q')
         refimg = get.imagefromFigure(nfigs);
         %close all 
        if sum(id_vect==3)<0
            disp('No ROIs currently unclassified.',char(10))
            unc_vect = input('Enter neurons you wish to unclassify:'); 
            id_vect(unc_vect)=3;         
            [id_vect,~,figs] = prompt.examine_unclassifiedv2(p,zstack,id_vect,ops,cellstat,plane_crshift,figs,ypix_zplane,zstack_drift,padjusted_xyz(:,p),'surround',surround,'refimg',refimg,'colororder',colororder); 
        else 
            [id_vect,~,figs] = prompt.examine_unclassifiedv2(p,zstack,id_vect,ops,cellstat,plane_crshift,figs,ypix_zplane,zstack_drift,padjusted_xyz(:,p),'surround',surround,'refimg',refimg,'colororder',colororder); 
        end
    %--Save Figure Positions -----------------------------------
    elseif strcmp(answer,'w')
        figs = utils.save_positions(nffigs,nzfigs,figs); 
    %--Save Current id_vect  -----------------------------------
    elseif strcmp(answer,'e')
        p = -1; 
    %--Align Z-Stack  -------------------------------------------
    elseif strcmp(answer,'z')
        refimg = get.imagefromFigure(nfigs);
        input_str =prompt.menu_str(5); 
        answer = input(input_str,"s");
        if strcmp(answer,'e')
            answer = input('Enter X,Y,Z-Plane Vector:'); 
            padjusted_xyz(p,:)=answer; 

        elseif strcmp(answer,'r')
            answer = input('Select a cell as reference:'); 
            [padjusted_xyz(p,:)] = prompt.align_zstack(p,zstack,id_vect,ops,cellstat,plane_crshift,figs,ypix_zplane,zstack_drift,padjusted_xyz(:,p),'surround',0,'refimg',refimg,'specified_roi',answer);
        end
   %-- 
    end
    

end
